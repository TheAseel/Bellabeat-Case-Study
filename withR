# bellabeat 

### about the company 
Bellabeat is a high-tech company founded by Urška Sršen and Sando Mur, with a mission to create health-focused smart products that empower women. 
Bellabeat collects data on activity, sleep, stress, and reproductive health,
providing women with valuable insights about their own well-being. Bellabeat is analyzing smart device usage data to inform its marketing strategy and provide valuable recommendations.
With a passion for utilizing consumer insights, Bellabeat aims to continuously enhance its products and expand its presence in the health and wellness industry.


#### These questions will guide the analysis:
1. What are some trends in smart device usage?
2. How could these trends apply to Bellabeat customers?
3. How could these trends help influence Bellabeat marketing strategy?

I follow the steps of the data analysis process: ask, prepare, process, analyze, share, and act:
##Ask
I will be checking the smart device usage data linked here, looking for trends, and patterns that will help me give the best insights to participate guide the marketing strategy, and hopefully unlock new growth opportunities for the company.

####Main stakeholders are:
1-	Urška Sršen: Bellabeat’s cofounder and Chief Creative Officer
2-	 Sando Mur: Mathematician and Bellabeat’s cofounder
3-	Bellabeat marketing analytics team.

##Prepare
By working with the following data set: Fitbit Fitness Tracker Data linked [here] (https://www.kaggle.com/datasets/arashnic/fitbit?resource=download) License [CC0: Public Domain] (https://creativecommons.org/publicdomain/zero/1.0/),  it’s a dataset that is generated by respondents to a distributed survey, where thirty eligible Fitbit users consented. The data contains minute-level output for physical activity, heart rate, and sleep monitoring in a total of 18 CSV files. 
To determine the credibility of the data By doing the ROCCC analysis I found that there are some limitations in the reliability since the sample size is 30 users and the gender is unspecified and in currency since the date was obtained in 2016 which was 7 years ago. Finally, there is no way to ensure the integrity of the data obtained since its collected as mentioned by a distributed survey.  

##Process

1-	Check the data structure 
###Output1:
> head(hourlyCalories) 
# A tibble: 6 × 3
          Id ActivityHour          StepTotal
       <dbl> <chr>                     <dbl>
1 1503960366 4/12/2016 12:00:00 AM       373
2 1503960366 4/12/2016 1:00:00 AM        160
3 1503960366 4/12/2016 2:00:00 AM        151
4 1503960366 4/12/2016 3:00:00 AM          0
5 1503960366 4/12/2016 4:00:00 AM          0
6 1503960366 4/12/2016 5:00:00 AM          0

> str(hourlyCalories) 
spc_tbl_ [22,099 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
 $ Id          : num [1:22099] 1.5e+09 1.5e+09 1.5e+09 1.5e+09 1.5e+09 ...
 $ ActivityHour: chr [1:22099] "4/12/2016 12:00:00 AM" "4/12/2016 1:00:00 AM" "4/12/2016 2:00:00 AM" "4/12/2016 3:00:00 AM" ...
 $ StepTotal   : num [1:22099] 373 160 151 0 0 ...
 - attr(*, "spec")=
  .. cols(
  ..   Id = col_double(),
  ..   ActivityHour = col_character(),
  ..   StepTotal = col_double()
  .. )
 - attr(*, "problems")=<externalptr>

> head(hourlySteps)
# A tibble: 6 × 3
          Id ActivityHour          StepTotal
       <dbl> <chr>                     <dbl>
1 1503960366 4/12/2016 12:00:00 AM       373
2 1503960366 4/12/2016 1:00:00 AM        160
3 1503960366 4/12/2016 2:00:00 AM        151
4 1503960366 4/12/2016 3:00:00 AM          0
5 1503960366 4/12/2016 4:00:00 AM          0
6 1503960366 4/12/2016 5:00:00 AM          0
> str(hourlySteps)
spc_tbl_ [22,099 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
 $ Id          : num [1:22099] 1.5e+09 1.5e+09 1.5e+09 1.5e+09 1.5e+09 ...
 $ ActivityHour: chr [1:22099] "4/12/2016 12:00:00 AM" "4/12/2016 1:00:00 AM" "4/12/2016 2:00:00 AM" "4/12/2016 3:00:00 AM" ...
 $ StepTotal   : num [1:22099] 373 160 151 0 0 ...
 - attr(*, "spec")=
  .. cols(
  ..   Id = col_double(),
  ..   ActivityHour = col_character(),
  ..   StepTotal = col_double()
  .. )
 - attr(*, "problems")=<externalptr> 

> head(hourlyIntensities)
# A tibble: 6 × 4
          Id ActivityHour          TotalIntensity AverageIntensity
       <dbl> <chr>                          <dbl>            <dbl>
1 1503960366 4/12/2016 12:00:00 AM             20            0.333
2 1503960366 4/12/2016 1:00:00 AM               8            0.133
3 1503960366 4/12/2016 2:00:00 AM               7            0.117
4 1503960366 4/12/2016 3:00:00 AM               0            0    
5 1503960366 4/12/2016 4:00:00 AM               0            0    
6 1503960366 4/12/2016 5:00:00 AM               0            0
> str(hourlyIntensities)
spc_tbl_ [22,099 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)
 $ Id              : num [1:22099] 1.5e+09 1.5e+09 1.5e+09 1.5e+09 1.5e+09 ...
 $ ActivityHour    : chr [1:22099] "4/12/2016 12:00:00 AM" "4/12/2016 1:00:00 AM" "4/12/2016 2:00:00 AM" "4/12/2016 3:00:00 AM" ...
 $ TotalIntensity  : num [1:22099] 20 8 7 0 0 0 0 0 13 30 ...
 $ AverageIntensity: num [1:22099] 0.333 0.133 0.117 0 0 ...
 - attr(*, "spec")=
  .. cols(
  ..   Id = col_double(),
  ..   ActivityHour = col_character(),
  ..   TotalIntensity = col_double(),
  ..   AverageIntensity = col_double()
  .. )
 - attr(*, "problems")=<externalptr> 

We can already notice that those three data sets share the same ID and ActivityHour therefore it would be easier to merge them into one data set for further 
cleaning and analysing 

###Output2:
> Activity <- merge(hourlyCalories, hourlyIntensities,by=c("Id","ActivityHour"))
> Activity <- merge(Activity, hourlySteps,by=c("Id","ActivityHour"))
> glimpse(Activity)
Rows: 22,099
Columns: 6
$ Id               <dbl> 1503960366, 1503960366, 1503960366, 1503960366, 1503960366, 1503960366, 150396036…
$ ActivityHour     <chr> "4/12/2016 1:00:00 AM", "4/12/2016 1:00:00 PM", "4/12/2016 10:00:00 AM", "4/12/20…
$ StepTotal.x      <dbl> 160, 221, 676, 89, 360, 338, 373, 253, 151, 1166, 0, 2063, 0, 344, 0, 489, 0, 138…
$ TotalIntensity   <dbl> 8, 6, 29, 9, 12, 21, 20, 11, 7, 36, 0, 58, 0, 13, 0, 16, 0, 29, 0, 39, 13, 41, 30…
$ AverageIntensity <dbl> 0.133333, 0.100000, 0.483333, 0.150000, 0.200000, 0.350000, 0.333333, 0.183333, 0…
$ StepTotal.y      <dbl> 160, 221, 676, 89, 360, 338, 373, 253, 151, 1166, 0, 2063, 0, 344, 0, 489, 0, 138…




###Output3:
> head(dailyActivity_merged)
# A tibble: 6 × 15
          Id ActivityDate TotalSteps TotalDistance TrackerDistance LoggedActivitiesDist…¹ VeryActiveDistance
       <dbl> <chr>             <dbl>         <dbl>           <dbl>                  <dbl>              <dbl>
1 1503960366 4/12/2016         13162          8.5             8.5                       0               1.88
2 1503960366 4/13/2016         10735          6.97            6.97                      0               1.57
3 1503960366 4/14/2016         10460          6.74            6.74                      0               2.44
4 1503960366 4/15/2016          9762          6.28            6.28                      0               2.14
5 1503960366 4/16/2016         12669          8.16            8.16                      0               2.71
6 1503960366 4/17/2016          9705          6.48            6.48                      0               3.19
> head(sleepDay_merged)
# A tibble: 6 × 5
          Id SleepDay              TotalSleepRecords TotalMinutesAsleep TotalTimeInBed
       <dbl> <chr>                             <dbl>              <dbl>          <dbl>
1 1503960366 4/12/2016 12:00:00 AM                 1                327            346
2 1503960366 4/13/2016 12:00:00 AM                 2                384            407
3 1503960366 4/15/2016 12:00:00 AM                 1                412            442
4 1503960366 4/16/2016 12:00:00 AM                 2                340            367
5 1503960366 4/17/2016 12:00:00 AM                 1                700            712
6 1503960366 4/19/2016 12:00:00 AM                 1                304            320
 

> head(weightLogInfo_merged)
# A tibble: 6 × 8
          Id Date                  WeightKg WeightPounds   Fat   BMI IsManualReport         LogId
       <dbl> <chr>                    <dbl>        <dbl> <dbl> <dbl> <lgl>                  <dbl>
1 1503960366 5/2/2016 11:59:59 PM      52.6         116.    22  22.6 TRUE           1462233599000
2 1503960366 5/3/2016 11:59:59 PM      52.6         116.    NA  22.6 TRUE           1462319999000
3 1927972279 4/13/2016 1:08:52 AM     134.          294.    NA  47.5 FALSE          1460509732000
4 2873212765 4/21/2016 11:59:59 PM     56.7         125.    NA  21.5 TRUE           1461283199000
5 2873212765 5/12/2016 11:59:59 PM     57.3         126.    NA  21.7 TRUE           1463097599000
6 4319703577 4/17/2016 11:59:59 PM     72.4         160.    25  27.5 TRUE           1460937599000

 we can notice NA values in here 

 
> #remove the fat cloumn because it has no important values for the anlysis 
> weightLogInfo <- weightLogInfo_merged[-5] 
> View (weightLogInfo)
# A tibble: 6 × 7
          Id Date                  WeightKg WeightPounds   BMI IsManualReport         LogId
       <dbl> <chr>                    <dbl>        <dbl> <dbl> <lgl>                  <dbl>
1 1503960366 5/2/2016 11:59:59 PM      52.6         116.  22.6 TRUE           1462233599000
2 1503960366 5/3/2016 11:59:59 PM      52.6         116.  22.6 TRUE           1462319999000
3 1927972279 4/13/2016 1:08:52 AM     134.          294.  47.5 FALSE          1460509732000
4 2873212765 4/21/2016 11:59:59 PM     56.7         125.  21.5 TRUE           1461283199000
5 2873212765 5/12/2016 11:59:59 PM     57.3         126.  21.7 TRUE           1463097599000
6 4319703577 4/17/2016 11:59:59 PM     72.4         160.  27.5 TRUE           1460937599000

> #checking for duplicates
> sum(duplicated(sleepDay_merged))
[1] 3
> sum(duplicated(Activity))
[1] 0
> sum(duplicated(weightLogInfo))
[1] 0
> sum(duplicated(dailyActivity_merged))
[1] 0
> sleepDay <- unique(sleepDay_merged)
> sum(duplicated(sleepDay))
[1] 0



> #add totalhoursasleep
> sleepDay %>% mutate(TotalHoursAsleep= TotalMinutesAsleep/60)
# A tibble: 410 × 6
           Id SleepDay              TotalSleepRecords TotalMinutesAsleep TotalTimeInBed TotalHoursAsleep
        <dbl> <chr>                             <dbl>              <dbl>          <dbl>            <dbl>
 1 1503960366 4/12/2016 12:00:00 AM                 1                327            346             5.45
 2 1503960366 4/13/2016 12:00:00 AM                 2                384            407             6.4 
 3 1503960366 4/15/2016 12:00:00 AM                 1                412            442             6.87
 4 1503960366 4/16/2016 12:00:00 AM                 2                340            367             5.67
 5 1503960366 4/17/2016 12:00:00 AM                 1                700            712            11.7 
 6 1503960366 4/19/2016 12:00:00 AM                 1                304            320             5.07
 7 1503960366 4/20/2016 12:00:00 AM                 1                360            377             6   
 8 1503960366 4/21/2016 12:00:00 AM                 1                325            364             5.42
 9 1503960366 4/23/2016 12:00:00 AM                 1                361            384             6.02
10 1503960366 4/24/2016 12:00:00 AM                 1                430            449             7.17
# ℹ 400 more rows
# ℹ Use `print(n = ...)` to see more rows



## Analyze & share  


##Act
